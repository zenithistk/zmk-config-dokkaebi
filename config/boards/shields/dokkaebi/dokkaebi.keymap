#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    tapping-term-ms = <175>;
};

&lt {
    tapping-term-ms = <175>;
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_lbrc {
            timeout-ms = <50>;
            key-positions = <24 25>;
            bindings = <&kp LBKT>;
        };
        combo_rbrc {
            timeout-ms = <50>;
            key-positions = <34 35>;
            bindings = <&kp RBKT>;
        };
        combo_lt2 {
            timeout-ms = <50>;
            key-positions = <48 49 50>;
            bindings = <&mo 3>;
        };
    };

    behaviors {
        gresc: grave_escape {
            compatible = "zmk,behavior-mod-morph";
            label = "GRAVE_ESCAPE";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp GRAVE>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT|MOD_RALT)>;
            keep-mods = <(MOD_RSFT)>;
        };
        td_ralt_to1: tap_dance_ralt_to_layer_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_RALT_TO_LAYER_1";
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            bindings = <&kp RALT>, <&to 1>;
        };
        td_rctrl_to0: tap_dance_rctrl_to_layer_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_RCTRL_TO_LAYER_0";
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            bindings = <&kp RCTL>, <&to 0>;
        };
        rpi: require_prior_idle {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <175>;
            quick-tap-ms = <150>;
            bindings = <&kp>, <&kp>;
        };
        rpi2: require_prior_idle2 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <175>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        bt_0: bt_profile_macro_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>
                , <&bt BT_SEL 0>
                , <&macro_wait_time 300>
                , <&bt BT_DISC 1>
                , <&bt BT_DISC 2>;
        };

        bt_1: bt_profile_macro_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>
                , <&bt BT_SEL 1>
                , <&macro_wait_time 300>
                , <&bt BT_DISC 0>
                , <&bt BT_DISC 2>;
        };
        
        bt_2: bt_profile_macro_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>
                , <&bt BT_SEL 2>
                , <&macro_wait_time 300>
                , <&bt BT_DISC 1>
                , <&bt BT_DISC 2>;
        };

        select_usb: usb_profile_macro {
            label = "SELECT_USB";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_USB>
                , <&macro_wait_time 300>
                , <&bt BT_DISC 0>
                , <&bt BT_DISC 1>
                , <&bt BT_DISC 2>;
        };

        bt_0_clr: bt_profile_macro_0_clr {
            label = "BT_0_CLR";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>
                , <&bt BT_SEL 0>
                , <&macro_wait_time 300>
                , <&bt BT_CLR>;
        };

        bt_1_clr: bt_profile_macro_1_clr {
            label = "BT_1_CLR";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>
                , <&bt BT_SEL 1>
                , <&macro_wait_time 300>
                , <&bt BT_CLR>;
        };

        bt_2_clr: bt_profile_macro_2_clr {
            label = "BT_2_CLR";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>
                , <&bt BT_SEL 2>
                , <&macro_wait_time 300>
                , <&bt BT_CLR>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&gresc          &kp N1 &kp N2 &kp N3   &kp N4   &kp N5                        &kp N6 &kp N7   &kp N8    &kp N9  &kp N0   &kp DEL
&kp TAB         &kp Q  &kp W  &kp E    &kp R    &kp T                         &kp Y  &kp U    &kp I     &kp O   &kp P    &kp EQUAL
&mt LGUI MINUS  &kp A  &kp S  &kp D    &kp F    &kp G                         &kp H  &kp J    &kp K     &kp L   &kp SEMI &kp SQT
&kp LSHFT       &kp Z  &kp X  &kp C    &kp V    &kp B                         &kp N  &kp M    &kp COMMA &kp DOT &kp FSLH &rpi2 RSHFT ENTER
                           &kp LALT &lt 2 SPACE &rpi LCTRL BSPC           &kp ENTER  &lt 1 SPACE  &kp RALT
            >;

        };

        lower_layer {
            bindings = <
&trans     &trans     &trans     &trans     &trans     &trans                 &trans     &trans     &trans     &trans     &trans     &trans
&trans     &trans     &trans     &trans     &trans     &trans                 &trans     &trans     &kp UP     &trans     &trans     &trans
&trans     &trans     &trans     &trans     &trans     &trans                 &kp HOME   &kp LEFT   &kp DOWN   &kp RIGHT  &trans     &trans
&trans     &trans     &trans     &trans     &trans     &trans                 &kp END    &trans     &kp PG_UP  &kp PG_DN  &kp BSLH   &trans
                                 &trans     &kp SPACE  &kp LCTRL              &kp RSHFT  &kp SPACE  &trans
            >;

        };

        raise_layer {
            bindings = <
&kp C_VOL_UP  &kp F1        &kp F2         &kp F3           &kp F4            &kp F5                       &kp F6     &kp F7     &kp F8     &kp F9     &kp F10    &kp F11
&kp C_VOL_DN  &trans        &trans         &trans           &trans            &trans                       &trans     &trans     &trans     &trans     &trans     &kp F12
&trans        &trans        &trans         &trans           &trans            &trans                       &trans     &trans     &trans     &trans     &trans     &trans
&trans        &trans        &trans         &trans           &trans            &trans                       &trans     &trans     &trans     &trans     &kp BSLH   &trans
                                           &trans           &trans            &kp BSPC                     &trans     &trans     &trans
            >;

        };

        adjust_layer {
            bindings = <
&select_usb   &bt_0         &bt_1         &bt_2         &trans        &trans                       &trans     &trans     &trans     &trans     &trans     &trans
&trans        &bt_0_clr     &bt_1_clr     &bt_2_clr     &trans        &trans                       &trans     &trans     &trans     &trans     &trans     &trans
&trans        &trans        &trans        &trans        &trans        &trans                       &trans     &trans     &trans     &trans     &trans     &trans
&trans        &trans        &trans        &trans        &trans        &trans                       &trans     &trans     &trans     &trans     &trans     &trans
                                          &trans        &trans        &trans                       &trans     &trans     &trans
            >;

        };
        
    };
};
